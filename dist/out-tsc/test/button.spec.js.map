{"version":3,"file":"button.spec.js","sourceRoot":"","sources":["../../../src/api/test/button.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, assert } from '@open-wc/testing';\r\nimport { ButtonCi } from '../components/button.component';\r\n\r\ndescribe('ci-button', () => {\r\n    it('Should be create a ButtonCi instance', async () => {\r\n        const element = document.createElement('ci-button');\r\n        assert.instanceOf(element, ButtonCi);\r\n    });\r\n\r\n    describe('SET', () => {\r\n        it('Should be set theme', async () => {\r\n            const theme = 'success';\r\n            const component = await fixture<ButtonCi>(html`<ci-button theme=${theme}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--${theme}`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set size', async () => {\r\n            const size = 'large';\r\n            const component = await fixture<ButtonCi>(html`<ci-button size=${size}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--${size}`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set label', async () => {\r\n            const label = 'Um texto aqui';\r\n            const component = await fixture<ButtonCi>(html`<ci-button label=${label}></ci-button>`);\r\n            assert.equal(component.innerText, label);\r\n        });\r\n\r\n        it('Should be set type', async () => {\r\n            const type = 'submit';\r\n            const component = await fixture<ButtonCi>(html`<ci-button type=${type}></ci-button>`);\r\n            const att = component.getAttribute('type');\r\n            assert.equal(att, type);\r\n        });\r\n\r\n        it('Should be set outline', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button outline=${true}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--brand--outline`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set block', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button block=${true}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--block`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set disabled', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button disabled=${true}></ci-button>`);\r\n            const att = component.getAttribute('disabled');\r\n            assert.isTrue(Boolean(att));\r\n        });\r\n\r\n        it('Should be set responsive', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button responsive=${true}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--responsive`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set iconButton', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button icon-button=${true}></ci-button>`);\r\n            assert.equal(component.text, '');\r\n        });\r\n\r\n        it('Should be set noStroke', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button no-stroke=${true}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--brand--no-stroke`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set isLoading', async () => {\r\n            const component = await fixture<ButtonCi>(html`<ci-button is-loading=${true}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-loader-container`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set textAlign', async () => {\r\n            const align = 'left';\r\n            const component = await fixture<ButtonCi>(html`<ci-button text-align=${align}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`ci-btn--align-left`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n\r\n        it('Should be set icon', async () => {\r\n            const icon = 'check';\r\n            const component = await fixture<ButtonCi>(html`<ci-button icon=${icon}></ci-button>`);\r\n            const cls = component.getElementsByClassName(`uil-${icon}`);\r\n            assert.isTrue(Boolean(cls.length));\r\n        });\r\n    });\r\n});\r\n"]}