{"version":3,"file":"validator.service.js","sourceRoot":"","sources":["../../../../../src/api/components/shared/services/validator.service.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,SAAS;IAAtB;QACY,eAAU,GAAG,kDAAkD,CAAC;QAChE,gBAAW,GAAG,UAAU,CAAC;QACzB,aAAQ,GAAG,cAAc,CAAC;QAC1B,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,aAAQ,GAAG,wBAAwB,CAAC;QACpC,cAAS,GAAG,6BAA6B,CAAC;IAiFtD,CAAC;IA/EG;;;MAGE;IACK,YAAY,CAAC,KAAa;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED;;;MAGE;IACK,aAAa,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED;;;MAGE;IACK,UAAU,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;MAGE;IACK,UAAU,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;MAGE;IACK,UAAU,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;MAGE;IACK,WAAW,CAAC,KAAa;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED;;;MAGE;IACK,eAAe,CAAC,KAAa;QAChC,OAAO,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACK,UAAU,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;MAGE;IACK,aAAa,CAAC,KAAa;QAC9B,OAAO,KAAK,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,CAAC;IACtD,CAAC;IAED;;;MAGE;IACK,cAAc,CAAC,KAAa;QAC/B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;IACtD,CAAC;CACJ","sourcesContent":["export class Validator {\r\n    private emailRegex = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\r\n    private numberRegex = /^[0-9]+$/;\r\n    private cepRegex = /^\\d{5}\\d{3}$/;\r\n    private telRegex = /(^\\d{10}$)|(^$)/;\r\n    private celRegex = /(^\\d{11}$)|(^$)/;\r\n    private cpfRegex = /^\\d{3}\\d{3}\\d{3}\\d{2}$/;\r\n    private cnpjRegex = /^\\d{2}\\d{3}\\d{3}\\d{4}\\d{2}$/;\r\n\r\n    /**\r\n     * Verifica a validade do email segundo o regex emailRegex\r\n     * @param {string} email Email\r\n    */\r\n    public isValidEmail(email: string): boolean {\r\n        return this.emailRegex.test(email);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do número segundo o regex numberRegex\r\n     * @param {string} value Número\r\n    */\r\n    public isValidNumber(value: string): boolean {\r\n        return this.numberRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do número de telefone segundo o regex telRegex\r\n     * @param {string} value Número de telefone\r\n    */\r\n    public isValidTel(value: string): boolean {\r\n        return this.telRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do número de celular segundo o regex celRegex\r\n     * @param {string} value Número de celular\r\n    */\r\n    public isValidCel(value: string): boolean {\r\n        return this.celRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do número de cpf segundo o regex cpfRegex\r\n     * @param {string} value Número de cpf\r\n    */\r\n    public isValidCpf(value: string): boolean {\r\n        return this.cpfRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do número de cnpj segundo o regex cnpjRegex\r\n     * @param {string} value Número de CNPJ\r\n    */\r\n    public isValidCnpj(value: string): boolean {\r\n        return this.cnpjRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade da senha segundo as regras de tamanho (length > = 6)\r\n     * @param {string} value Senha\r\n    */\r\n    public isValidPassword(value: string): boolean {\r\n        return value.length >= 6;\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do cep\r\n     * @param {string} value CEP\r\n    */\r\n    public isValidCep(value: string): boolean {\r\n        return this.cepRegex.test(value);\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do cel ou tel\r\n     * @param {string} value CEL ou TEL\r\n    */\r\n    public isValidTelCel(value: string): boolean {\r\n        return value.length === 10 || value.length === 11;\r\n    }\r\n\r\n    /**\r\n     * Verifica a validade do percentual\r\n     * @param {string} value Percent\r\n    */\r\n    public isValidPercent(value: string): boolean {\r\n        return Number(value) >= 0 && Number(value) <= 100;\r\n    }\r\n}\r\n"]}