{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../../src/api/components/alert.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAG3C,IAAa,OAAO,eAApB,MAAa,OAAQ,SAAQ,UAAU;IAAvC;;QACgB,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAW,SAAS,CAAC;QAC1B,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAG,KAAK,CAAC;IAuC7B,CAAC;IA5BG,gBAAgB,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC;IAEnC,IAAI,IAAI;QACJ,OAAO,OAAO,SAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9C,CAAC;IAED,IAAI,GAAG;QACH,MAAM,GAAG,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAAE;QACxD,IAAI,IAAI,CAAC,IAAI,EAAE;YAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAAE;QAExC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;+BACY,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;;8CAEP,IAAI,CAAC,IAAI;kBACrC,IAAI,CAAC,OAAO;;8BAEA,CAAC,IAAI,CAAC,MAAM;;;;SAIjC,CAAC;IACN,CAAC;CACJ,CAAA;AArCU,cAAM,GAAG,GAAG,CAAA,EAAE,CAAC;AAEf,aAAK,GAAG;IACX,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,sBAAsB;IAC/B,IAAI,EAAE,aAAa;CACtB,CAAA;AAZW;IAAX,QAAQ,EAAE;wCAAc;AACb;IAAX,QAAQ,EAAE;sCAA2B;AAC1B;IAAX,QAAQ,EAAE;uCAAgB;AACf;IAAX,QAAQ,EAAE;qCAAc;AAJhB,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CA2CnB;SA3CY,OAAO","sourcesContent":["import { html, css, LitElement } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { TState } from '../dto';\r\nimport { animate } from '@lit-labs/motion';\r\n\r\n@customElement('ci-alert')\r\nexport class AlertCi extends LitElement {\r\n    @property() message = '';\r\n    @property() theme: TState = 'success';\r\n    @property() action = false;\r\n    @property() show = false;\r\n\r\n    static styles = css``;\r\n\r\n    static icons = {\r\n        danger: 'times-square',\r\n        success: 'thumbs-up',\r\n        warning: 'exclamation-triangle',\r\n        info: 'info-circle'\r\n    }\r\n\r\n    createRenderRoot() { return this; }\r\n\r\n    get icon(): string {\r\n        return `uil-${AlertCi.icons[this.theme]}`;\r\n    }\r\n\r\n    get cls(): string {\r\n        const ret = [];\r\n\r\n        if (this.theme) { ret.push(`ci-alert--${this.theme}`); }\r\n        if (this.show) { ret.push(`ci-slide`); }\r\n\r\n        return ret.join(' ');\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n        <div class=\"ci-alert ${this.cls}\" ${animate()}>\r\n            <div>\r\n                <i class=\"uil ci-alert-icon ${this.icon}\"></i>\r\n                ${this.message}\r\n            </div>\r\n            <button ?hidden=${!this.action} type=\"button\" class=\"ci-btn ci-btn--icon ci-btn--icon--no-shadow\">\r\n                <i class=\"uil uil-times\"></i>\r\n            </button>\r\n        </div>\r\n        `;\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'ci-alert': AlertCi;\r\n    }\r\n}\r\n"]}